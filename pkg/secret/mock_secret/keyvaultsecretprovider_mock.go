// Code generated by MockGen. DO NOT EDIT.
// Source: goms.io/aks/rp/core/secret (interfaces: KeyvaultSecretProvider)

// Package mock_secret is a generated GoMock package.
package mock_secret

import (
	keyvault "github.com/Azure/azure-sdk-for-go/services/keyvault/2016-10-01/keyvault"
	gomock "github.com/golang/mock/gomock"
	log "github.com/Azure/aks-deployer/pkg/log"
	reflect "reflect"
)

// MockKeyvaultSecretProvider is a mock of KeyvaultSecretProvider interface
type MockKeyvaultSecretProvider struct {
	ctrl     *gomock.Controller
	recorder *MockKeyvaultSecretProviderMockRecorder
}

// MockKeyvaultSecretProviderMockRecorder is the mock recorder for MockKeyvaultSecretProvider
type MockKeyvaultSecretProviderMockRecorder struct {
	mock *MockKeyvaultSecretProvider
}

// NewMockKeyvaultSecretProvider creates a new mock instance
func NewMockKeyvaultSecretProvider(ctrl *gomock.Controller) *MockKeyvaultSecretProvider {
	mock := &MockKeyvaultSecretProvider{ctrl: ctrl}
	mock.recorder = &MockKeyvaultSecretProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockKeyvaultSecretProvider) EXPECT() *MockKeyvaultSecretProviderMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockKeyvaultSecretProvider) Get(arg0 *log.Logger, arg1 string) (keyvault.SecretBundle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(keyvault.SecretBundle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockKeyvaultSecretProviderMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockKeyvaultSecretProvider)(nil).Get), arg0, arg1)
}

// Set mocks base method
func (m *MockKeyvaultSecretProvider) Set(arg0 *log.Logger, arg1 string, arg2 keyvault.SecretSetParameters) (keyvault.SecretBundle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0, arg1, arg2)
	ret0, _ := ret[0].(keyvault.SecretBundle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Set indicates an expected call of Set
func (mr *MockKeyvaultSecretProviderMockRecorder) Set(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockKeyvaultSecretProvider)(nil).Set), arg0, arg1, arg2)
}
